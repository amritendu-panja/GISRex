<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="${basedir}\logs\internal-nlog-AspNetCore.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<target xsi:type="File" name="allfile" fileName="${basedir}\logs\nlog-AspNetCore-all-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="ownFile-web" fileName="${basedir}\logs\nlog-AspNetCore-own-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
	
		<target name="DatabaseLog" 
				xsi:type="Database"
				connectionString="User ID=postgres;Password=swift;Host=localhost;Port=5432;Database=testgisdev1;Pooling=true;"
				dbProvider="Npgsql.NpgsqlConnection, Npgsql"
			>
			<commandText>
				INSERT INTO public."ApplicationLogs"
				(					
					"LogLevel", 
					"Message",
					"CreateDate",
					"host",
					"IPAddress",
					"RequestUrl",
					"RequestHost",
					"RequestIPAddress",
					"ControllerName",
					"MethodName"
				)
				VALUES
				(
					@logLevel, 
					@message,
					@createDate,
					@host,
					@ipAddress,
					@requestUrl,
					@requestHost,
					@requestIPAddress,
					@controllerName,
					@methodName
				)
			</commandText>
			<parameter name="logLevel" layout="${level}" />
			<parameter name="message" layout="${message}" />
			<parameter name="createDate" layout="${date:universalTime=True}" dbType="date"/>
			<parameter name="host" layout="${machinename}" /> <!-- defined in NLog, see https://nlog-project.org/config/?tab=layout-renderers-->
			<parameter name="ipAddress" layout="${local-ip}" />
			<parameter name="requestUrl" layout="${aspnet-request-url:IncludePort=true:IncludeQueryString=true}" />
			<parameter name="requestHost" layout="${aspnet-request-host}" />
			<parameter name="requestIPAddress" layout="${aspnet-request-ip}" />
			<parameter name="controllerName" layout="${aspnet-mvc-controller}" />
			<parameter name="methodName" layout="${aspnet-mvc-action}" />
		</target>

	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Trace" writeTo="allfile" />

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />

		<logger name="*" minlevel="Trace" writeTo="ownFile-web" />
		<logger name="*" minlevel="Info" writeTo="DatabaseLog" final="true" />
	</rules>
</nlog>