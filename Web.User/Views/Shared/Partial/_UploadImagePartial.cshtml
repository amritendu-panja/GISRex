@model UploadImagePartialModel
<div class="modal fade" id="fileUploadModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="staticBackdropLabel">Upload</h5>
				<button type="button" class="btn-close" onclick="closeDialog()" aria-label="Close"></button>
			</div>
			<div class="modal-body text-center">
				<div class="file-drop-area p-4">
					<div class="drop-area-container">
						<span class="choose-file-button btn btn-primary">Choose Files</span>
						<span class="file-message">or drag and drop files here</span>
					</div>
					<input type="file" class="file-input" accept=".jpg,.jpeg,.png,.svg" onchange="uploadImage()" />
				</div>
				<div id="image-preview-area" class="p-4">
					<img id="image-preview" class="rounded-circle mb-2" />
					<div>
						<label>
							File: <label id="profile-image-file" class="me-2">image.img</label>
							<a href="#" onclick="resetUploadImageDialog()">Clear</a>
						</label>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" onclick="closeDialog()">Cancel</button>
				<button type="button" class="btn btn-primary" onclick="applyImage(@Model.JsCallBackFunctionName)">Apply</button>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	var dialog;
	var imgDataStorageId = "#@Model.ImageDataStorageId";
	var imgFilenameId = "#@Model.ImageFilenameId";

	$(function () {
		initImageUploadDialog();
	});

	function initImageUploadDialog() {
		dialog = new bootstrap.Modal("#fileUploadModal");
		resetUploadImageDialog();
	}

	function showDialog() {
		if (dialog) {
			resetUploadImageDialog();
			dialog.show();
		}
		else {
			alert("Image upload dialog is not initialized. Please contact support.")
		}
	}

	function closeDialog() {
		dialog.hide();
		resetUploadImageDialog();
	}

	function applyImage(callBack) {
		var img = $("#image-preview");
		var imageString = img.attr("src");
		$(".img-account-profile").attr("src", imageString);
		$(imgDataStorageId).val(imageString);
		var fileName = $("#profile-image-file").text();
		$(imgFilenameId).val(fileName);
		closeDialog();
		if (callBack) {
			callBack();
		}
	}

	function uploadImage() {
		var fileUpload = $(".file-input")[0];
		if (fileUpload.files.length > 0) {
			var imageFile = fileUpload.files[0];
			var fileSize = Math.round(imageFile.size / 1024);
			if (fileSize < 5120) {
				var fileName = imageFile.name;
				$("#profile-image-file").text(fileName);
				var reader = new FileReader();
				reader.onload = function (e) {
					var img = $("#image-preview");
					img.attr("src", e.target.result);
					showImagePreviewArea();
				}
				reader.readAsDataURL(imageFile);
			}
			else {
				alert("File size too big");
			}
		}
	}

	function resetUploadImageDialog() {
		var fileUpload = $(".file-input");
		fileUpload.val('');
		$("#profile-image-file").text('image.img');
		showImageUploadArea();
	}

	function showImagePreviewArea() {
		$("#image-preview-area").show();
		$(".file-drop-area").hide();
	}

	function showImageUploadArea() {
		$("#image-preview-area").hide();
		$(".file-drop-area").show();
	}
</script>

