@model RegisterPartnerModel
@{
	ViewData["Title"] = "Add Partner";
	ViewData["ActiveLink"] = "Partners";

	var uploadImageModel = new UploadImagePartialModel()
			{
				ImageDataStorageId = Html.IdFor(m => m.ImageData),
				ImageFilenameId = Html.IdFor(m => m.ImageFilename),
				JsCallBackFunctionName = "formChanged"
			};

	var countryStateJsModel = new CountryStatePartialModel()
			{
				CountrySelectId = Html.IdFor(m => m.CountryCode),
				StateSelectId = Html.IdFor(m => m.StateCode),
				SelectedCountryCode = Model.CountryCode,
				SelectedStateCode = Model.StateCode != null ? Model.StateCode.Value.ToString() : string.Empty,
				CountryCallingCodeClassName = "calling-code",
				NeedCountryCallingCode = true
			};
}

@using (Html.BeginForm(FormMethod.Post, new { @id = "frmPartner" }))
{
	@await Html.PartialAsync("Partial/_ValidationSummary")

	@Html.HiddenFor(m => m.ImageData)
	@Html.HiddenFor(m=> m.ImageFilename)
	@Html.HiddenFor(m=> m.IsUserExists)
	@Html.HiddenFor(m=> m.IsDomainExists)
	@Html.AntiForgeryToken()

	<div class="card mb-3">
		<div class="card-header">
			<span>Login Information</span>
		</div>
		<div class="card-body d-flex adjust-content-center">
			<div class="text-center col-5">
				<img class="img-account-profile rounded-circle mb-2" alt="" src="~/images/userprofiles/@Model.LogoPath">
				<div class="small font-italic text-muted mb-3">JPG or PNG no larger than 5 MB</div>
				<button type="button" class="btn btn-primary mb-2" onclick="showDialog()">Upload new image</button>
			</div>
			<div class="col-7">
				<div class="mb-3">
					@Html.LabelFor(m=> m.UserName, new { @class = "form-label" })
					<div class="input-group">
						@Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @placeholder = "Username", @onchange = "checkUserExists();", @autocomplete = "off" })
						<span class="input-group-text">
							<i class="fa-solid fa-xmark" id="username-na"></i>
							<i class="fa-solid fa-check" id="username-ok"></i>
						</span>
						<button type="button" class="btn btn-outline-secondary" onclick="checkUserExists()">
							<i class="fa-solid fa-rotate"></i>
						</button>
					</div>
				</div>
				<div class="mb-3">
					@Html.LabelFor(m=> m.Password, new { @class = "form-label" })
					@Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "****", @autocomplete = "off" })

				</div>
				<div class="mb-3">
					@Html.LabelFor(m=> m.ConfirmPassword, new { @class = "form-label" })
					@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "****", @autocomplete = "off" })
				</div>
			</div>
		</div>
	</div>

	<div class="card mb-3">
		<div class="card-header">
			<span>Organization Information</span>
		</div>
		<div class="card-body">
			<div class="col-12 mb-3">
				@Html.LabelFor(m=>m.OrganizationName, new { @class = "form-label" })
				@Html.TextBoxFor(m=>m.OrganizationName, new { @class="form-control", @placeholder = "Acme Inc." })
			</div>
			<div class="col-12 mb-3">
				@Html.LabelFor(m=>m.Domain, new { @class = "form-label" })
				<div class="input-group">
					@Html.TextBoxFor(m=>m.Domain, new { @class="form-control", @placeholder = "example.com" })
					<span class="input-group-text">
						<i class="fa-solid fa-xmark" id="domain-na"></i>
						<i class="fa-solid fa-check" id="domain-ok"></i>
					</span>
					<button type="button" class="btn btn-outline-secondary" onclick="checkDomainExists()">
						<i class="fa-solid fa-rotate"></i>
					</button>
				</div>
			</div>
			<div class="col-12 mb-3">
				@Html.LabelFor(m=>m.Description, new { @class = "form-label" })
				@Html.TextBoxFor(m=>m.Description, new { @class="form-control", @placeholder = "Organization description" })
			</div>
			<div class="col-12 mb-3">
				@Html.LabelFor(m=>m.CountryCode, new { @class = "form-label" })
				@Html.DropDownListFor(m=>m.CountryCode,
			new List<SelectListItem>{ new SelectListItem(){ Text = "Select...", Disabled = true, Selected = true } },
			new { @class="form-select", @onchange = "getCountryDetails()" })
			</div>
		</div>
	</div>

	<div class="card">
		<div class="card-header">
			<span>Contact Information</span>
		</div>
		<div class="card-body">
			<div class="mb-3 d-flex gap-3">
				<div class="col">
					@Html.LabelFor(m=> m.Email, new { @class = "form-label" })
					@Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "someone@email.com", @autocomplete = "off" })
				</div>
				<div class="col">
					@Html.LabelFor(m=> m.Phone, new { @class = "form-label" })
					<div class="input-group">
						<span class="input-group-text calling-code" id="callingCode"></span>
						@Html.TextBoxFor(m => m.Phone, new { @class = "form-control", @placeholder = "Phone number", @autocomplete = "off" })
					</div>
				</div>
			</div>
			<div class="col-12 mb-3">
				@Html.LabelFor(m=>m.AddressLine1, new { @class = "form-label" })
				@Html.TextBoxFor(m=>m.AddressLine1, new { @class="form-control", @placeholder = "1234 Main St" })
			</div>
			<div class="col-12 mb-3">
				@Html.LabelFor(m=>m.AddressLine2, new { @class = "form-label" })
				@Html.TextBoxFor(m=>m.AddressLine2, new { @class="form-control", @placeholder = "Apartment, studio, or floor" })
			</div>
			
			<div class="row mb-3">
				<div class="col-md-6 mb-3">
					@Html.LabelFor(m=>m.City, new { @class = "form-label" })
					@Html.TextBoxFor(m=>m.City, new { @class="form-control", @placeholder = "City" })
				</div>
				<div class="col-md-4 mb-3">
					@Html.LabelFor(m=>m.StateCode, new { @class = "form-label" })
					@Html.DropDownListFor(m=>m.StateCode,
				new List<SelectListItem>{ new SelectListItem(){ Text = "Select...", Disabled = true} },
				new { @class="form-select" })
				</div>
				<div class="col-md-2 mb-3">
					@Html.LabelFor(m=>m.PostCode, new { @class = "form-label" })
					@Html.TextBoxFor(m=>m.PostCode, new { @class="form-control", @placeholder = "Postal code" })
				</div>
			</div>
			<div class="d-grid">
				<input type="submit" class="btn btn-primary text-white" value="Add Organization" />
			</div>
		</div>
	</div>
}


@section Scripts{
	
	@await Html.PartialAsync("Partial/_UploadImagePartial", uploadImageModel)
	@await Html.PartialAsync("Partial/_CountryStateJSPartial", countryStateJsModel)
	@await Html.PartialAsync("_ValidationScriptsPartial")

	<script type="text/javascript">		
		$(function () {
			checkUserExists();
		});

		function checkUserExists() {
			var token = $('input[name="__RequestVerificationToken"]').val();
			var userName = $("#@Html.IdFor(m=>m.UserName)").val();
			if (userName && userName.length >= 6) {
				var url = '/api/data/checkuser/' + userName;

				$.ajax({
					type: 'GET',
					url: url,
					headers: {
						"RequestVerificationToken": token
					},
					accept: 'application/json',
					success: function (response) {
						$("#@Html.IdFor(m=>m.IsUserExists)").val(response.success);
						if (response.success) {
							$("#username-na").show();
							$("#username-ok").hide();
						}
						else {
							$("#username-na").hide();
							$("#username-ok").show();
						}
					},
					error: function (xhrError) {
						console.log(xhrError);
						alert("Something went wrong! Please contact support")
					}
				});
			}
			else {
				$("#@Html.IdFor(m=>m.IsUserExists)").val(false);
				$("#username-na").show();
				$("#username-ok").hide();
			}
		}

		function checkDomainExists() {
			var token = $('input[name="__RequestVerificationToken"]').val();
			var domain = $("#@Html.IdFor(m=>m.Domain)").val();
			if (domain && domain.length >= 6) {
				var url = '/api/data/checkdomain/' + domain;

				$.ajax({
					type: 'GET',
					url: url,
					headers: {
						"RequestVerificationToken": token
					},
					accept: 'application/json',
					success: function (response) {
						$("#@Html.IdFor(m=>m.IsDomainExists)").val(response.success);
						if (response.success) {
							$("#domain-na").show();
							$("#domain-ok").hide();
						}
						else {
							$("#domain-na").hide();
							$("#domain-ok").show();
						}
					},
					error: function (xhrError) {
						console.log(xhrError);
						alert("Something went wrong! Please contact support")
					}
				});
			}
			else {
				$("#@Html.IdFor(m=>m.IsDomainExists)").val(false);
				$("#domain-na").show();
				$("#domain-ok").hide();
			}
		}


		function formChanged() {
			$("#submitForm").attr("disabled", null);
		}
	</script>
}

