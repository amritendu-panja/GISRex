@model PartnerProfileModel
@{
	ViewData["Title"] = $"Partner - {Model.OrganizationName}";
	ViewData["ActiveLink"] = "Partners";
	var uploadImageModel = new UploadImagePartialModel()
			{
				ImageDataStorageId = Html.IdFor(m => m.ImageData),
				ImageFilenameId = Html.IdFor(m => m.ImageFilename),
				JsCallBackFunctionName = "formChanged"
			};

	var countryStateJsModel = new CountryStatePartialModel()
			{
				CountrySelectId = Html.IdFor(m => m.CountryCode),
				StateSelectId = Html.IdFor(m => m.StateCode),
				SelectedCountryCode = Model.CountryCode,
				SelectedStateCode = Model.StateCode,
				CountryCallingCodeClassName = "callingCode",
				NeedCountryCallingCode = true
			};
}

@using (Html.BeginForm(FormMethod.Post, new { @id = "frmPartner", @onchange = "formChanged" }))
{
	@await Html.PartialAsync("Partial/_ValidationSummary")

	@Html.HiddenFor(m => m.ImageData)
	@Html.HiddenFor(m=> m.ImageFilename)
	@Html.HiddenFor(m=> m.UserId)

	<div class="card mb-3">
		<div class="card-header">
			<span>@Model.OrganizationName</span>
		</div>
		<div class="card-body d-flex adjust-content-center">
			<div class="text-center col-5">
				<img class="img-account-profile rounded-circle mb-2" alt="" src="~/images/userprofiles/@Model.LogoUrl">
				<div class="small font-italic text-muted mb-3">JPG or PNG no larger than 5 MB</div>				
			</div>
			<div class="col-7">
				<div class="mb-3">
					@Html.LabelFor(m=> m.UserName, new { @class = "form-label" })					
					@Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @placeholder = "Username", @readonly = "readonly", @disabled = "disabled", @autocomplete = "off" })					
				</div>
				<div class="mb-3">
					<a href="#" class="btn btn-primary"><i class="fa-solid fa-key"></i> Reset Password</a>
					<button type="button" class="btn btn-primary" onclick="showDialog()"><i class="fa-regular fa-image"></i> Upload new image</button>
					@if (Model.IsLocked)
					{
						<button type="button" class="btn btn-primary"><i class="fa-solid fa-unlock"></i> Unlock Organization</button>
					}
					else
					{
						<button type="button" class="btn btn-primary"><i class="fa-solid fa-lock"></i> Lock Organization</button>
					}
				</div>
			</div>
		</div>
	</div>

	<div class="card mb-3">
		<div class="card-header">
			<span>Organization Information</span>
		</div>
		<div class="card-body">
			<div class="col-12 mb-3">
				@Html.LabelFor(m=>m.OrganizationName, new { @class = "form-label" })
				@Html.TextBoxFor(m=>m.OrganizationName, new { @class="form-control", @placeholder = "Acme Inc." })
			</div>
			<div class="col-12 mb-3">
				@Html.LabelFor(m=>m.Description, new { @class = "form-label" })
				@Html.TextBoxFor(m=>m.Description, new { @class="form-control", @placeholder = "Organization description" })
			</div>
			<div class="col-12 mb-3">
				@Html.LabelFor(m=>m.CountryCode, new { @class = "form-label" })
				@Html.DropDownListFor(m=>m.CountryCode,
			new List<SelectListItem>{ new SelectListItem(){ Text = "Select...", Disabled = true, Selected = true } },
			new { @class="form-select", @onchange = "getCountryDetails()" })
			</div>
		</div>
	</div>

	<div class="card">
		<div class="card-header">
			<span>Contact Information</span>
		</div>
		<div class="card-body">
			<div class="mb-3 d-flex gap-3">
				<div class="col">
					@Html.LabelFor(m=> m.Email, new { @class = "form-label" })
					@Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "someone@email.com", @autocomplete = "off" })
				</div>
				<div class="col">
					@Html.LabelFor(m=> m.Phone, new { @class = "form-label" })
					<div class="input-group">
						<span class="input-group-text calling-code" id="callingCode"></span>
						@Html.TextBoxFor(m => m.Phone, new { @class = "form-control", @placeholder = "Phone number", @autocomplete = "off" })
					</div>
				</div>
			</div>
			<div class="col-12 mb-3">
				@Html.LabelFor(m=>m.AddressLine1, new { @class = "form-label" })
				@Html.TextBoxFor(m=>m.AddressLine1, new { @class="form-control", @placeholder = "1234 Main St" })
			</div>
			<div class="col-12 mb-3">
				@Html.LabelFor(m=>m.AddressLine2, new { @class = "form-label" })
				@Html.TextBoxFor(m=>m.AddressLine2, new { @class="form-control", @placeholder = "Apartment, studio, or floor" })
			</div>

			<div class="row mb-3">
				<div class="col-md-6 mb-3">
					@Html.LabelFor(m=>m.City, new { @class = "form-label" })
					@Html.TextBoxFor(m=>m.City, new { @class="form-control", @placeholder = "City" })
				</div>
				<div class="col-md-4 mb-3">
					@Html.LabelFor(m=>m.StateCode, new { @class = "form-label" })
					@Html.DropDownListFor(m=>m.StateCode,
				new List<SelectListItem>{ new SelectListItem(){ Text = "Select...", Disabled = true} },
				new { @class="form-select" })
				</div>
				<div class="col-md-2 mb-3">
					@Html.LabelFor(m=>m.PostCode, new { @class = "form-label" })
					@Html.TextBoxFor(m=>m.PostCode, new { @class="form-control", @placeholder = "Postal code" })
				</div>
			</div>
			<div class="d-grid">
				<input type="submit" id="submitForm" disabled="disabled" class="btn btn-primary text-white" value="Update" />
			</div>
		</div>
	</div>
}

@section Scripts{
	@await Html.PartialAsync("Partial/_UploadImagePartial", uploadImageModel)
	@await Html.PartialAsync("Partial/_CountryStateJSPartial", countryStateJsModel)
	@await Html.PartialAsync("_ValidationScriptsPartial")
	<script type="text/javascript">
		function formChanged() {
			$("#submitForm").attr("disabled", null);
		}
	</script>
}